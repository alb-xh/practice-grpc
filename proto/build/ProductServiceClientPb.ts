/**
 * @fileoverview gRPC-Web generated client stub for product
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.21.12
// source: product.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as product_pb from './product_pb.d.ts'; // proto import: "product.proto"
debugger;

export class ProductServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreateProduct = new grpcWeb.MethodDescriptor(
    '/product.ProductService/CreateProduct',
    grpcWeb.MethodType.UNARY,
    product_pb.CreateProductInput,
    product_pb.CreateProductOutput,
    (request: product_pb.CreateProductInput) => {
      return request.serializeBinary();
    },
    product_pb.CreateProductOutput.deserializeBinary
  );

  createProduct(
    request: product_pb.CreateProductInput,
    metadata?: grpcWeb.Metadata | null): Promise<product_pb.CreateProductOutput>;

  createProduct(
    request: product_pb.CreateProductInput,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: product_pb.CreateProductOutput) => void): grpcWeb.ClientReadableStream<product_pb.CreateProductOutput>;

  createProduct(
    request: product_pb.CreateProductInput,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: product_pb.CreateProductOutput) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/product.ProductService/CreateProduct',
        request,
        metadata || {},
        this.methodDescriptorCreateProduct,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/product.ProductService/CreateProduct',
    request,
    metadata || {},
    this.methodDescriptorCreateProduct);
  }

  methodDescriptorGetProduct = new grpcWeb.MethodDescriptor(
    '/product.ProductService/GetProduct',
    grpcWeb.MethodType.UNARY,
    product_pb.GetProductInput,
    product_pb.GetProductOutput,
    (request: product_pb.GetProductInput) => {
      return request.serializeBinary();
    },
    product_pb.GetProductOutput.deserializeBinary
  );

  getProduct(
    request: product_pb.GetProductInput,
    metadata?: grpcWeb.Metadata | null): Promise<product_pb.GetProductOutput>;

  getProduct(
    request: product_pb.GetProductInput,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: product_pb.GetProductOutput) => void): grpcWeb.ClientReadableStream<product_pb.GetProductOutput>;

  getProduct(
    request: product_pb.GetProductInput,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: product_pb.GetProductOutput) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/product.ProductService/GetProduct',
        request,
        metadata || {},
        this.methodDescriptorGetProduct,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/product.ProductService/GetProduct',
    request,
    metadata || {},
    this.methodDescriptorGetProduct);
  }

  methodDescriptorListProducts = new grpcWeb.MethodDescriptor(
    '/product.ProductService/ListProducts',
    grpcWeb.MethodType.UNARY,
    product_pb.ListProductsInput,
    product_pb.ListProductsOutput,
    (request: product_pb.ListProductsInput) => {
      return request.serializeBinary();
    },
    product_pb.ListProductsOutput.deserializeBinary
  );

  listProducts(
    request: product_pb.ListProductsInput,
    metadata?: grpcWeb.Metadata | null): Promise<product_pb.ListProductsOutput>;

  listProducts(
    request: product_pb.ListProductsInput,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: product_pb.ListProductsOutput) => void): grpcWeb.ClientReadableStream<product_pb.ListProductsOutput>;

  listProducts(
    request: product_pb.ListProductsInput,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: product_pb.ListProductsOutput) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/product.ProductService/ListProducts',
        request,
        metadata || {},
        this.methodDescriptorListProducts,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/product.ProductService/ListProducts',
    request,
    metadata || {},
    this.methodDescriptorListProducts);
  }

}

